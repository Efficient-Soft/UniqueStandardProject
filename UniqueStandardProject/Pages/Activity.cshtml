@page
@model UniqueStandardProject.Pages.ActivityModel
@{
    ViewData["Title"] = "Home Page";
}
<style>
    img {
        border-radius: 10px;
    }
</style>

<!-- Activity Start -->
<div class="container-xxl py-5">
    <div class="container">
        <div class="text-center wow fadeInUp" data-wow-delay="0.1s">
            <h1 class="mb-5">Our Activity</h1>
        </div>
        <div class="row" id="activity">
        </div>
        <div class="d-flex justify-content-center mt-4">
            <button id="prevPage" class="btn btn-primary me-2">Previous</button>
            <button id="nextPage" class="btn btn-primary">Next</button>
        </div>
    </div>
</div>
<!-- Activity End -->

<script>
    var url = 'api/products/activity';

    let allData = [];
    let currentPage = 1;
    const itemsPerPage = 9;

    var item = document.getElementById('activity');

    fetch(url)
        .then((res) => res.json())
        .then((response) => {
            console.log(response);
            if (response.success) {
                if (Array.isArray(response.data)) {
                    allData = response.data;
                    allData.sort((a, b) => a.sortOrder - b.sortOrder);
                    renderPage(currentPage);
                } else {
                    console.error('The data received is not an array.');
                }
            } else {
                console.error('Request was not successful.');
            }
        })
        .catch((error) => {
            console.error('Error fetching data:', error);
        });

    const renderPage = (page) => {
        const startIndex = (page - 1) * itemsPerPage;
        const endIndex = startIndex + itemsPerPage;
        const pageData = allData.slice(startIndex, endIndex);
        generateHtml(pageData);
        updatePaginationButtons();
    };

    const updatePaginationButtons = () => {
        const totalPages = Math.ceil(allData.length / itemsPerPage);
        document.getElementById('prevPage').disabled = currentPage === 1;
        document.getElementById('nextPage').disabled = currentPage === totalPages;
    };

    // Event Listeners for Pagination Buttons
    document.getElementById('prevPage').addEventListener('click', () => {
        if (currentPage > 1) {
            currentPage--;
            renderPage(currentPage);
        }
    });

    document.getElementById('nextPage').addEventListener('click', () => {
        const totalPages = Math.ceil(allData.length / itemsPerPage);
        if (currentPage < totalPages) {
            currentPage++;
            renderPage(currentPage);
        }
    });

    const generateHtml = (data) => {
        data.sort((a, b) => a.sortOrder - b.sortOrder);
        var html = ``;
        data.forEach((player) => {
            html +=
                `<div class="col-md-4 mb-5">
                    <div class="text-dark bg-light" >
                       <img src=${player.img} class="ps-3 pe-3 pt-3 pb-3 mb-3" alt="Card image cap" style="width:100%;height:250px;">
                       <div style="height:50px;"><center>${player.title}</center></div>
                    </div>
                </div>`;
        });
        document.getElementById('activity').innerHTML = html;
    };

</script>
